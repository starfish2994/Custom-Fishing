name: Sync with Upstream

on:
  schedule:
    - cron: '0 2 * * *'  # 每天 UTC 时间 2 点执行（北京时间 10 点）
  workflow_dispatch:  # 允许手动触发

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your fork repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 拉取所有历史提交

      - name: Get upstream repo URL from GitHub API
        id: get_upstream
        run: |
          RESPONSE=$(gh api /repos/${{ github.repository }})
          UPSTREAM_URL=$(echo "$RESPONSE" | jq -r '.parent.html_url + ".git"')
          if [ "$UPSTREAM_URL" = "null.git" ]; then
            echo "当前仓库不是fork，无法获取上游仓库URL"
            exit 1
          fi
          echo "UPSTREAM_URL=$UPSTREAM_URL" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add or update upstream repo
        run: |
          if ! git remote | grep -q upstream; then
            git remote add upstream ${{ steps.get_upstream.outputs.UPSTREAM_URL }}
          else
            git remote set-url upstream ${{ steps.get_upstream.outputs.UPSTREAM_URL }}
          fi

      - name: Fetch upstream updates
        run: git fetch upstream

      - name: Record commit hash before merge
        id: pre_merge
        run: |
          # 记录合并前主分支的最新提交哈希
          echo "PRE_COMMIT=$(git rev-parse main)" >> $GITHUB_OUTPUT

      - name: Merge upstream into your main branch
        run: |
          git checkout main
          git merge upstream/main

      - name: Check if sync actually happened
        id: check_sync
        run: |
          # 记录合并后主分支的最新提交哈希
          POST_COMMIT=$(git rev-parse main)
          # 比较合并前后的哈希，不同则说明有实际更新
          if [ "${{ steps.pre_merge.outputs.PRE_COMMIT }}" != "$POST_COMMIT" ]; then
            echo "SYNC_HAPPENED=true" >> $GITHUB_OUTPUT
          else
            echo "SYNC_HAPPENED=false" >> $GITHUB_OUTPUT
          fi

      - name: Push updates to your fork
        if: steps.check_sync.outputs.SYNC_HAPPENED == 'true'
        run: git push origin main

      - name: Run another action after sync
        if: steps.check_sync.outputs.SYNC_HAPPENED == 'true'
        run: |
          # 触发另一个工作流（需替换为目标工作流的事件类型）
          gh api --method POST /repos/${{ github.repository }}/dispatches \
            -f event_type="after_sync" \
            -f client_payload='{"message": "上游同步完成并检测到更新"}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
